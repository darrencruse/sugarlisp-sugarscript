// Generated by SugarLisp v0.6.5
var sl = require('sugarlisp-core/sl-types');
var match = require('sugarlisp-match/pattern-match');
exports["ternary"] = function(forms) {
  this.transpileSubExpressions(forms);

  return match(forms, function(when) {
    when([
        function(sym) {
          return sym.value === "ternary";
        },
        match.var("condition", match.any),
        match.var("iftrue", match.any),
        match.var("iffalse", match.any)
      ],
      function(vars) {
        return (function(condition, iftrue, iffalse) {
          return sl.generated([
            "(", condition, " ?\n",
            "    ", iftrue, " :\n",
            "    ", iffalse, ")"
          ]);
        }).call(this, vars["condition"], vars["iftrue"], vars["iffalse"]);
      }, this);
    when([
        match.var("any", match.sldefault)
      ],
      function(vars) {
        return (function(any) {
          return this.error('ternary expects a condition followed by a "then" and an "else" expression');
        }).call(this, vars["any"]);
      }, this);
  }, this);
};