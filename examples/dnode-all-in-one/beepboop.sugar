//
// here's dnode's standard "beepboop" example
// the only thing different here is everything's in one file.
//
// this gets split into client and server using compile time #if
// directives selected using sugar's "--for" option (see
// makem.sh).
//

var dnode = require('dnode');

#if (transpile["for"] === "server") {

  var remote = {
     transform: (s, cb) => {
       console.log("I got beeped!");
       // we return null,result to match the node err,data callback style
       // (the await macro expects this style)
       cb(null, s.replace(#/[aeiou]{2,}/, 'oo').toUpperCase());
     }
  };

  var server = dnode(remote);
  server.listen(5004);
  console.log("Listening for beeps...");
}

#if (transpile["for"] === "client") {

  var d = dnode.connect(5004);
  d.on('remote', (remote) => {
    remote.transform('beep', (err, s) => {
      if (err)
        console.log('an error occurred ${err}');
      else
        console.log('beep goes ${s}');
      d.end();
    });
  });
}
